// <auto-generated />
using System;
using EcfrApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcfrApp.Migrations
{
    [DbContext(typeof(EcfrContext))]
    [Migration("20250512004958_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("EcfrApp.Models.Agency", b =>
                {
                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentSlug")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SortableName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Slug");

                    b.HasIndex("ParentSlug");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("EcfrApp.Models.CfrReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgencySlug")
                        .HasColumnType("TEXT");

                    b.Property<string>("Appendix")
                        .HasColumnType("TEXT");

                    b.Property<string>("Chapter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Part")
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subchapter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subpart")
                        .HasColumnType("TEXT");

                    b.Property<int>("Title")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgencySlug");

                    b.ToTable("CfrReferences");
                });

            modelBuilder.Entity("EcfrApp.Models.Correction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectiveAction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DisplayInToc")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ErrorCorrected")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ErrorOccurred")
                        .HasColumnType("TEXT");

                    b.Property<string>("FrCitation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Title")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Corrections");
                });

            modelBuilder.Entity("EcfrApp.Models.CorrectionCount", b =>
                {
                    b.Property<string>("AgencySlug")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.HasKey("AgencySlug");

                    b.ToTable("CorrectionCounts");
                });

            modelBuilder.Entity("EcfrApp.Models.CorrectionReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CfrReference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Chapter")
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Part")
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubChapter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subpart")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subtitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CorrectionId");

                    b.ToTable("CorrectionReferences");
                });

            modelBuilder.Entity("EcfrApp.Models.DescendantRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chapter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RangeEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RangeStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Subchapter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Subpart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Title")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DescendantRanges");
                });

            modelBuilder.Entity("EcfrApp.Models.StructureNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescendantRange")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("GeneratedId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabelDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabelLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceivedOn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Reserved")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StructureNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TitleStructureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Volumes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StructureNodeId");

                    b.HasIndex("TitleStructureId");

                    b.ToTable("StructureNodes");
                });

            modelBuilder.Entity("EcfrApp.Models.TitleStructure", b =>
                {
                    b.Property<int>("Title")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescendantRange")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabelDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabelLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Reserved")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Volumes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Title");

                    b.ToTable("TitleStructures");
                });

            modelBuilder.Entity("EcfrApp.Models.Agency", b =>
                {
                    b.HasOne("EcfrApp.Models.Agency", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentSlug");
                });

            modelBuilder.Entity("EcfrApp.Models.CfrReference", b =>
                {
                    b.HasOne("EcfrApp.Models.Agency", "Agency")
                        .WithMany("CfrReferences")
                        .HasForeignKey("AgencySlug");

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("EcfrApp.Models.CorrectionReference", b =>
                {
                    b.HasOne("EcfrApp.Models.Correction", "Correction")
                        .WithMany("CfrReferences")
                        .HasForeignKey("CorrectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Correction");
                });

            modelBuilder.Entity("EcfrApp.Models.StructureNode", b =>
                {
                    b.HasOne("EcfrApp.Models.StructureNode", null)
                        .WithMany("Children")
                        .HasForeignKey("StructureNodeId");

                    b.HasOne("EcfrApp.Models.TitleStructure", "TitleStructure")
                        .WithMany("Children")
                        .HasForeignKey("TitleStructureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TitleStructure");
                });

            modelBuilder.Entity("EcfrApp.Models.Agency", b =>
                {
                    b.Navigation("CfrReferences");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("EcfrApp.Models.Correction", b =>
                {
                    b.Navigation("CfrReferences");
                });

            modelBuilder.Entity("EcfrApp.Models.StructureNode", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("EcfrApp.Models.TitleStructure", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
